{"version":3,"sources":["Login.js","Friend.js","Vk.js","App.js","serviceWorker.js","index.js"],"names":["useStyles","makeStyles","card","minWidth","Login","props","classes","react_default","a","createElement","Card","className","CardContent","Typography","align","variant","component","CardActions","style","justifyContent","Button","size","color","mx","onClick","login","avatar","margin","width","height","Friend","Box","display","alignItems","flexDirection","Avatar","alt","info","name","src","photo","Divider","bigAvatar","Vk","self","friends","map","friend","index","src_Friend","key","logout","APP_ID","box","minHeight","marginTop","FlexWrapper","children","App","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","logIn","VK","Auth","checkLogin","logOut","state","isLoading","loggedIn","_this2","setState","getLoginStatus","event","status","getInfo","_this3","Api","fields","v","user","order","count","response","items","concat","first_name","last_name","photo_200_orig","_this4","window","vkAsyncInit","init","apiId","setTimeout","api","document","type","async","head","appendChild","loadVkApi","lib","Container","maxWidth","src_Vk","src_Login","Component","Boolean","location","hostname","match","ReactDOM","render","src_App","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"yWASMA,EAAYC,YAAW,CACzBC,KAAM,CACFC,SAAU,OAwBHC,MAnBf,SAAeC,GACX,IAAMC,EAAUN,IAChB,OACIO,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAMC,UAAWL,EAAQJ,MACrBK,EAAAC,EAAAC,cAACG,EAAA,EAAD,KACIL,EAAAC,EAAAC,cAACI,EAAA,EAAD,CAAYC,MAAM,SAASC,QAAQ,KAAKC,UAAU,MAAlD,gGACsBT,EAAAC,EAAAC,cAAA,WADtB,iTAKJF,EAAAC,EAAAC,cAACQ,EAAA,EAAD,CAAaC,MAAO,CAAEC,eAAgB,WAClCZ,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAQL,QAAQ,YAAYM,KAAK,QAAQC,MAAM,UAAUC,GAAG,OAAOC,QAASnB,EAAMoB,OAAlF,6GClBVzB,EAAYC,YAAW,CACzByB,OAAQ,CACJC,OAAQ,GACRC,MAAO,GACPC,OAAQ,MA0BDC,MArBf,SAAgBzB,GACZ,IAAMC,EAAUN,IAChB,OACIO,EAAAC,EAAAC,cAACsB,EAAA,EAAD,KACIxB,EAAAC,EAAAC,cAACsB,EAAA,EAAD,CACIC,QAAQ,OACRC,WAAW,SACXC,cAAc,MACdf,eAAe,cAEfZ,EAAAC,EAAAC,cAAC0B,EAAA,EAAD,CAAQC,IAAK/B,EAAMgC,KAAKC,KAAMC,IAAKlC,EAAMgC,KAAKG,MAAO7B,UAAWL,EAAQoB,SACxEnB,EAAAC,EAAAC,cAACI,EAAA,EAAD,CAAYC,MAAM,SAASC,QAAQ,MAC9BV,EAAMgC,KAAKC,OAIpB/B,EAAAC,EAAAC,cAACgC,EAAA,EAAD,CAAS1B,QAAQ,gBCrBvBf,EAAYC,YAAW,CACzBC,KAAM,CACFC,SAAU,KAEduC,UAAW,CACPf,OAAQ,EACRC,MAAO,GACPC,OAAQ,MAoCDc,MA/Bf,SAAYtC,GACR,IAAMC,EAAUN,IAChB,OACIO,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAMC,UAAWL,EAAQJ,MACrBK,EAAAC,EAAAC,cAACG,EAAA,EAAD,KACIL,EAAAC,EAAAC,cAACsB,EAAA,EAAD,CACIC,QAAQ,OACRC,WAAW,SACXC,cAAc,MACdf,eAAe,UAEfZ,EAAAC,EAAAC,cAAC0B,EAAA,EAAD,CAAQC,IAAK/B,EAAMgC,KAAKO,KAAKN,KAAMC,IAAKlC,EAAMgC,KAAKO,KAAKJ,MAAO7B,UAAWL,EAAQoC,YAClFnC,EAAAC,EAAAC,cAACI,EAAA,EAAD,CAAYC,MAAM,SAASC,QAAQ,MAC9BV,EAAMgC,KAAKO,KAAKN,OAGzB/B,EAAAC,EAAAC,cAACI,EAAA,EAAD,CAAYC,MAAM,OAAOC,QAAQ,MAAjC,yCACAR,EAAAC,EAAAC,cAACgC,EAAA,EAAD,CAAS1B,QAAQ,cAChBV,EAAMgC,KAAKQ,QAAQC,IAAI,SAACC,EAAQC,GAAT,OACpBzC,EAAAC,EAAAC,cAACwC,EAAD,CAAQC,IAAKF,EAAOX,KAAMU,OAGlCxC,EAAAC,EAAAC,cAACQ,EAAA,EAAD,CAAaC,MAAO,CAAEC,eAAgB,WAClCZ,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAQL,QAAQ,YAAYM,KAAK,QAAQC,MAAM,UAAUC,GAAG,OAAOC,QAASnB,EAAM8C,QAAlF,qCCvCVC,QAAgBA,OAGhBpD,EAAYC,YAAW,CACzBoD,IAAK,CACDC,UAAW,OACXC,UAAW,UAKnB,SAASC,EAAYnD,GACjB,IAAMC,EAAUN,IAChB,OACIO,EAAAC,EAAAC,cAACsB,EAAA,EAAD,CACIpB,UAAWL,EAAQ+C,IACnBrB,QAAQ,OACRC,WAAW,SACXd,eAAe,UAEdd,EAAMoD,cAoHJC,cA5GX,SAAAA,EAAYrD,GAAO,IAAAsD,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAJ,IACfC,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAF,GAAAO,KAAAH,KAAMzD,KAoFV6D,MAAQ,kBAAMP,EAAKQ,GAAGC,KAAK3C,MAAM,kBAAMkC,EAAKU,cAAc,IArFvCV,EAwFnBW,OAAS,kBAAMX,EAAKQ,GAAGC,KAAKjB,OAAO,kBAAMQ,EAAKU,gBAtF1CV,EAAKY,MAAQ,CACTC,WAAW,EACXC,UAAU,EACVpC,KAAM,IALKsB,4EAWN,IAAAe,EAAAZ,KACTA,KAAKa,SAAS,CAAEH,WAAW,IAC3BV,KAAKK,GAAGC,KAAKQ,eAAe,SAAAC,GACH,cAAjBA,EAAMC,OACNJ,EAAKK,UAELL,EAAKC,SAAS,CACVH,WAAW,EACXC,UAAU,wCAOhB,IAAAO,EAAAlB,KACNA,KAAKK,GAAGc,IAAIhB,KAAK,YAAa,CAC1BiB,OAAQ,CAAC,kBACTC,EAAG,QACJ,SAAAC,GAAI,OACCJ,EAAKb,GAAGc,IAAIhB,KAAK,cAAe,CAC5BoB,MAAO,SACPC,MAAO,EACPJ,OAAQ,CAAC,mBACTC,EAAG,QACJ,SAAAtC,GACCuC,EAAOA,EAAKG,SAAS,GACrB1C,EAAUA,EAAQ0C,SAASC,MAC3B,IAAInD,EAAO,GACXA,EAAKO,KAAO,CACRN,KAAI,GAAAmD,OAAKL,EAAKM,WAAV,KAAAD,OAAwBL,EAAKO,WACjCnD,MAAO4C,EAAKQ,gBAEhBvD,EAAKQ,QAAUA,EAAQC,IAAI,SAAAC,GACvB,MAAO,CACHT,KAAI,GAAAmD,OAAK1C,EAAO2C,WAAZ,KAAAD,OAA0B1C,EAAO4C,WACrCnD,MAAOO,EAAO6C,kBAGtBZ,EAAKL,SAAS,CACVtC,KAAMA,EACNmC,WAAW,EACXC,UAAU,4CAOlB,IAAAoB,EAAA/B,KACRA,KAAKa,SAAS,CAAEH,WAAW,IAC3BsB,OAAOC,YAAc,WACjBD,OAAO3B,GAAG6B,KAAK,CACXC,MAAO7C,IAEXyC,EAAK1B,GAAK2B,OAAO3B,GACjB0B,EAAKxB,cAGT6B,WAAW,WACP,IAAIC,EAAMC,SAAS3F,cAAc,UACjC0F,EAAIE,KAAO,kBACXF,EAAI5D,IAAM,uCACV4D,EAAIG,OAAQ,EACZF,SAASG,KAAKC,YAAYL,IAC3B,+CAKHrC,KAAK2C,6CAUL,OAAI3C,KAAKS,MAAMC,UACJjE,EAAAC,EAAAC,cAACiG,EAAA,KAAD,MAGHnG,EAAAC,EAAAC,cAACkG,EAAA,EAAD,CAAWC,SAAS,MAChBrG,EAAAC,EAAAC,cAAC+C,EAAD,KACMM,KAAKS,MAAME,SACTlE,EAAAC,EAAAC,cAACoG,EAAD,CAAIxE,KAAMyB,KAAKS,MAAMlC,KAAMc,OAAQW,KAAKQ,SACxC/D,EAAAC,EAAAC,cAACqG,EAAD,CAAOrF,MAAOqC,KAAKI,iBArG7B6C,aCvBEC,QACW,cAA7BlB,OAAOmB,SAASC,UAEe,UAA7BpB,OAAOmB,SAASC,UAEhBpB,OAAOmB,SAASC,SAASC,MACvB,2DCXNC,IAASC,OAAO9G,EAAAC,EAAAC,cAAC6G,EAAD,MAASlB,SAASmB,eAAe,SD0H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC","file":"static/js/main.e48896dc.chunk.js","sourcesContent":["import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\n\n// CSS Styles\nconst useStyles = makeStyles({\n    card: {\n        minWidth: 275,\n    }\n});\n\n// Log In component\nfunction Login(props) {\n    const classes = useStyles();\n    return (\n        <Card className={classes.card} >\n            <CardContent>\n                <Typography align=\"center\" variant=\"h5\" component=\"h1\">\n                    Добро пожаловать! <br />\n                    Для продолжения необходима авторизация через ВКонтакте.\n                </Typography>\n            </CardContent>\n            <CardActions style={{ justifyContent: 'center' }}>\n                <Button variant=\"contained\" size=\"large\" color=\"primary\" mx=\"auto\" onClick={props.login}>\n                    Авторизоваться\n                </Button>\n            </CardActions>\n        </Card>\n    );\n}\n\nexport default Login;","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport Box from '@material-ui/core/Box';\nimport Avatar from '@material-ui/core/Avatar';\nimport Divider from '@material-ui/core/Divider';\n\n\n// CSS Styles\nconst useStyles = makeStyles({\n    avatar: {\n        margin: 10,\n        width: 60,\n        height: 60,\n    }\n});\n\n// Friend Component\nfunction Friend(props) {\n    const classes = useStyles();\n    return (\n        <Box>\n            <Box\n                display=\"flex\"\n                alignItems=\"center\"\n                flexDirection=\"row\"\n                justifyContent=\"flex-start\"\n            >\n                <Avatar alt={props.info.name} src={props.info.photo} className={classes.avatar}></Avatar>\n                <Typography align=\"center\" variant=\"h4\">\n                    {props.info.name}\n                </Typography>\n            </Box>\n\n            <Divider variant=\"fullWidth\" />\n        </Box>\n    );\n}\n\nexport default Friend;","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport Box from '@material-ui/core/Box';\nimport Friend from './Friend';\nimport Avatar from '@material-ui/core/Avatar';\nimport Divider from '@material-ui/core/Divider';\n\n// CSS styles\nconst useStyles = makeStyles({\n    card: {\n        minWidth: 275,\n    },\n    bigAvatar: {\n        margin: 3,\n        width: 90,\n        height: 90,\n    }\n});\n\n// VK Component\nfunction Vk(props) {\n    const classes = useStyles();\n    return (\n        <Card className={classes.card} >\n            <CardContent>\n                <Box\n                    display=\"flex\"\n                    alignItems=\"center\"\n                    flexDirection=\"row\"\n                    justifyContent=\"center\"\n                >\n                    <Avatar alt={props.info.self.name} src={props.info.self.photo} className={classes.bigAvatar}></Avatar>\n                    <Typography align=\"center\" variant=\"h4\">\n                        {props.info.self.name}\n                    </Typography>\n                </Box>\n                <Typography align=\"left\" variant=\"h5\">Друзья:</Typography>\n                <Divider variant=\"fullWidth\" />\n                {props.info.friends.map((friend, index) => // List of Friend components\n                    <Friend key={index} info={friend} />\n                )}\n            </CardContent>\n            <CardActions style={{ justifyContent: 'center' }}>\n                <Button variant=\"contained\" size=\"large\" color=\"primary\" mx=\"auto\" onClick={props.logout}>\n                    Выйти\n                </Button>\n            </CardActions>\n        </Card>\n    );\n}\n\nexport default Vk;","import React, { Component } from 'react';\nimport { Dots } from 'react-preloaders';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\nimport Box from '@material-ui/core/Box';\nimport Login from './Login';\nimport Vk from './Vk';\nimport config from './config.json';\n\nconst APP_ID = config.APP_ID;\n\n// CSS styles\nconst useStyles = makeStyles({\n    box: {\n        minHeight: '60vh',\n        marginTop: '12vh'\n    }\n});\n\n// Wrapper Component\nfunction FlexWrapper(props){\n    const classes = useStyles();\n    return (\n        <Box\n            className={classes.box}\n            display=\"flex\"\n            alignItems=\"center\"\n            justifyContent=\"center\"\n        >\n            {props.children}\n        </Box>\n    );\n}\n\n// App Component\nclass App extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            isLoading: true, // Data loading flag\n            loggedIn: false, // Logged In flag\n            info: {} // Profile and friendlist info\n        };\n    }\n\n\n    // Checking authorization with VK Api\n    checkLogin() {\n        this.setState({ isLoading: true });\n        this.VK.Auth.getLoginStatus(event => {\n            if (event.status === \"connected\")\n                this.getInfo();\n            else\n                this.setState({\n                    isLoading: false,\n                    loggedIn: false\n                });\n        });\n    }\n\n\n    // Get profile and friendlist info, updating state\n    getInfo() {\n        this.VK.Api.call('users.get', { // Get profile info\n            fields: ['photo_200_orig'],\n            v: '5.95'\n        }, user =>\n                this.VK.Api.call('friends.get', { // Get friends info\n                    order: 'random',\n                    count: 5,\n                    fields: ['photo_200_orig,'],\n                    v: '5.95'\n                }, friends => { // Response processing\n                    user = user.response[0];\n                    friends = friends.response.items;\n                    let info = {};\n                    info.self = {\n                        name: `${user.first_name} ${user.last_name}`,\n                        photo: user.photo_200_orig\n                    };\n                    info.friends = friends.map(friend => {\n                        return {\n                            name: `${friend.first_name} ${friend.last_name}`,\n                            photo: friend.photo_200_orig\n                        }\n                    });\n                    this.setState({ //Updating State\n                        info: info,\n                        isLoading: false,\n                        loggedIn: true\n                    });\n                })\n        )\n    }\n\n    // VK Api initialization\n    loadVkApi() {\n        this.setState({ isLoading: true });\n        window.vkAsyncInit = () => {\n            window.VK.init({\n                apiId: APP_ID\n            });\n            this.VK = window.VK;\n            this.checkLogin();\n        };\n\n        setTimeout(function () {\n            let api = document.createElement(\"script\");\n            api.type = \"text/javascript\";\n            api.src = \"https://vk.com/js/api/openapi.js?160\";\n            api.async = true;\n            document.head.appendChild(api);\n        }, 0);\n    }\n\n    // Initialize Api\n    componentDidMount() {\n        this.loadVkApi();\n    }\n\n    // Call log In method\n    logIn = () => this.VK.Auth.login(() => this.checkLogin(), 2);\n\n    // Call log out method\n    logOut = () => this.VK.Auth.logout(() => this.checkLogin());\n\n    render() {\n        if (this.state.isLoading)\n            return <Dots />; // Preloader\n        else\n            return (\n                <Container maxWidth=\"sm\" >\n                    <FlexWrapper>\n                        {(this.state.loggedIn)?\n                            <Vk info={this.state.info} logout={this.logOut}></Vk>: // Vk Component\n                            <Login login={this.logIn}></Login> // Log In Component\n                        }\n                    </FlexWrapper>\n                </Container>\n\n            );\n    }\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\n// Render App Component\nReactDOM.render(<App />, document.getElementById('root'));\n\nserviceWorker.unregister();\n"],"sourceRoot":""}